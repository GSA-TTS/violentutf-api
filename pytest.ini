[tool:pytest]
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function
env =
    SQLALCHEMY_WARN_20=1
    DATABASE_URL=sqlite+aiosqlite:///./test.db
    TESTING=1
    SECRET_KEY=test-secret-key-for-testing-only-32chars  # pragma: allowlist secret
    CSRF_PROTECTION=false
    REQUEST_SIGNING_ENABLED=false
    ENVIRONMENT=development
    DEBUG=true
    LOG_LEVEL=DEBUG
    LOG_FORMAT=text
    RATE_LIMIT_ENABLED=false
    ENABLE_METRICS=false
minversion = 7.0
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
# Import test environment setup before running tests
addopts =
    --import-mode=importlib
    --pythonpath=.
    -ra
    --strict-markers
    --ignore=docs
    --ignore=scripts
    --cov-branch
    --cov-report=term-missing:skip-covered
    --cov-fail-under=0
    --httpx-non-mocked-hosts=test,testserver,localhost,127.0.0.1
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    contract: marks tests as contract tests
    security: marks tests as security tests
    benchmark: marks tests as benchmark tests
    api: marks tests as API tests
    requires_auth: marks tests as requiring authentication
timeout = 300
filterwarnings =
    # Ignore third-party library warnings we can't control
    ignore:.*crypt.*deprecated.*:DeprecationWarning:passlib
    ignore:.*argon2.__version__.*:DeprecationWarning
    ignore:.*datetime.datetime.utcnow.*:DeprecationWarning:pydantic
    ignore:.*class-based.*config.*deprecated.*:PydanticDeprecatedSince20
    ignore:.*json_encoders.*deprecated.*:PydanticDeprecatedSince20
    # Don't ignore our own code's warnings - we want to see them
