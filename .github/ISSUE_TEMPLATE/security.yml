name: üîí Security Issue
description: Report or fix a security vulnerability in ViolentUTF API
title: "[SECURITY] "
labels: ["type:security", "status:pending-acceptance", "priority:high", "project:violentutf-api"]
body:
  - type: markdown
    attributes:
      value: |
        ‚ö†Ô∏è **IMPORTANT**: If this is a critical vulnerability in production, please report it through the [Security Advisory](https://github.com/GSA-TTS/violentutf-api/security/advisories/new) instead of creating a public issue.

        This template is for non-critical security improvements or already-disclosed vulnerabilities.

  - type: textarea
    id: frontmatter
    attributes:
      label: UAT Specification
      description: Structured specification for agent consumption (DO NOT MODIFY the YAML structure)
      value: |
        ```yaml
        ---
        schemaVersion: "uat-v1.0"
        issueID: ""
        type: "security"
        status: "pending-acceptance"
        priority: 1
        assignee: ""
        confidential: false  # Set to true for sensitive issues

        spec:
          vulnerabilityDescription: ""
          cveId: ""
          cvssScore: 0.0
          attackVector: ""  # network, adjacent, local, physical
          acceptanceCriteria:
            - given: "The vulnerability exists"
              when: "The fix is applied"
              then: "The attack vector is eliminated"
            - given: "The fix is deployed"
              when: "Security tests are run"
              then: "No regressions are introduced"

        quality:
          security:
            threat_model: ""  # STRIDE component
            owasp_category: ""
            requires_penetration_test: false
            requires_security_review: true
          testing:
            security_test_required: true
            regression_test_required: true

        relations:
          parent: ""
          dependsOn: []
          relatesTo: []

        remediation:
          immediate_mitigation: ""
          long_term_fix: ""
          affected_versions: []
          patch_versions: []
          workaround: ""
        ---
        ```
    validations:
      required: true

  - type: dropdown
    id: severity
    attributes:
      label: Severity
      options:
        - Critical (CVSS 9.0-10.0) - Immediate action required
        - High (CVSS 7.0-8.9) - Fix in next release
        - Medium (CVSS 4.0-6.9) - Fix in regular cycle
        - Low (CVSS 0.1-3.9) - Fix when convenient
    validations:
      required: true

  - type: dropdown
    id: vulnerability_type
    attributes:
      label: Vulnerability Type
      description: What type of security issue is this?
      options:
        - Authentication Bypass
        - Authorization Flaw
        - Injection (SQL, Command, etc.)
        - Cross-Site Scripting (XSS)
        - Cross-Site Request Forgery (CSRF)
        - Sensitive Data Exposure
        - Security Misconfiguration
        - Insecure Dependencies
        - Insufficient Logging
        - API Security
        - Container Security
        - Secrets Management
        - Other
    validations:
      required: true

  - type: textarea
    id: description
    attributes:
      label: Vulnerability Description
      description: Describe the security issue
      placeholder: |
        Describe the vulnerability, its root cause, and potential impact.
        Include technical details but avoid including actual exploit code in public issues.
    validations:
      required: true

  - type: textarea
    id: impact
    attributes:
      label: Impact Analysis
      description: What is the potential impact?
      placeholder: |
        Data exposed: User credentials, API keys, attack results
        Systems affected: API server, database, worker nodes
        User impact: All users, admin users only, specific roles
        Business impact: Data breach, service disruption, compliance violation
    validations:
      required: true

  - type: textarea
    id: reproduction
    attributes:
      label: Proof of Concept
      description: How can this be exploited? (Be responsible - don't include actual exploits)
      placeholder: |
        Steps to reproduce (sanitized):
        1. Send request to endpoint /api/v1/vulnerable
        2. Include malformed header
        3. Observe unauthorized access

        Note: Detailed PoC available privately upon request
    validations:
      required: false

  - type: textarea
    id: mitigation
    attributes:
      label: Proposed Fix
      description: How should this be fixed?
      placeholder: |
        Immediate mitigation:
        - Add input validation
        - Update WAF rules

        Long-term fix:
        - Implement proper authorization checks
        - Add security headers
        - Update dependencies
    validations:
      required: true

  - type: textarea
    id: affected_versions
    attributes:
      label: Affected Versions
      description: Which versions are vulnerable?
      placeholder: |
        Affected: v0.1.0 - v0.2.5
        Fixed in: v0.2.6+

        Docker images affected: violentutf-api:0.1.0 through violentutf-api:0.2.5
    validations:
      required: true

  - type: checkbox
    id: disclosure
    attributes:
      label: Responsible Disclosure
      description: Please confirm
      options:
        - label: I have followed responsible disclosure practices
          required: true
        - label: I have not publicly disclosed exploit details
          required: true
        - label: I am willing to work with maintainers on a fix
          required: false
