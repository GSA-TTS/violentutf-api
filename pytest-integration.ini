[tool:pytest]
# Configuration specifically for integration tests with stability improvements

minversion = 6.0
addopts =
    --strict-markers
    --strict-config
    --disable-warnings
    --tb=short
    --timeout=300
    --timeout-method=thread
    --asyncio-mode=auto
    -p no:cacheprovider
    --maxfail=5
    --durations=10

# Test discovery
testpaths = tests/integration
python_files = test_*.py *_test.py test_*_integration.py *_integration_test.py
python_classes = Test*
python_functions = test_*

# Asyncio configuration
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function

# Timeout configuration
timeout = 300
timeout_method = thread

# Markers for integration tests
markers =
    integration: mark as integration test
    database: mark as requiring database
    stable: mark as having stability improvements
    retry: mark for automatic retry on failure
    isolated: mark as requiring strict database isolation
    slow: mark test as slow running
    network: mark test as requiring network access

# Log configuration for integration tests
log_cli = true
log_cli_level = ERROR
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Warnings configuration
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:structlog
    ignore::RuntimeWarning:asyncio

# Integration-specific environment
env =
    TESTING = true
    LOG_LEVEL = ERROR
    ENVIRONMENT = test
    DATABASE_POOL_SIZE = 5
    DATABASE_MAX_OVERFLOW = 10
    RATE_LIMIT_ENABLED = false
