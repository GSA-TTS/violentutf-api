[tool.poetry]
name = "violentutf-api"
version = "1.0.0"
description = "Standalone AI red-teaming API service"
authors = ["ViolentUTF Team"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py311"
line-length = 120
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "S",   # bandit
    "N",   # pep8-naming
    "TID", # flake8-tidy-imports
    "SIM", # flake8-simplify
    "RUF", # ruff-specific rules
]
ignore = [
    "S101",  # Use of assert detected
    "S104",  # Possible binding to all interfaces
    "B008",  # Do not perform function calls in argument defaults
]
exclude = [
    ".git",
    ".ruff_cache",
    ".venv",
    "__pycache__",
    "tests",
    "migrations",
]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101", "S105", "S106"]

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "alembic.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "validate_extraction"
ignore_errors = true

[[tool.mypy.overrides]]
module = "app.core.config"
disable_error_code = ["unused-ignore"]

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
skips = ["B101", "B601"]

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-ra",
    "--strict-markers",
    "--cov=app",
    "--cov-branch",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=80",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/__init__.py",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = true

[tool.black]
line-length = 120
target-version = ["py311"]

[tool.isort]
profile = "black"
line_length = 120
