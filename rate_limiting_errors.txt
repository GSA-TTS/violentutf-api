/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/pytest_asyncio/plugin.py:208: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))
============================= test session starts ==============================
platform darwin -- Python 3.12.9, pytest-8.3.5, pluggy-1.5.0 -- /Library/Frameworks/Python.framework/Versions/3.12/bin/python3
cachedir: .pytest_cache
metadata: {'Python': '3.12.9', 'Platform': 'macOS-15.5-arm64-arm-64bit', 'Packages': {'pytest': '8.3.5', 'pluggy': '1.5.0'}, 'Plugins': {'xdist': '3.7.0', 'anyio': '4.9.0', 'env': '1.1.5', 'json-report': '1.5.0', 'httpx': '0.35.0', 'timeout': '2.4.0', 'metadata': '3.1.1', 'cov': '6.2.1', 'Faker': '37.3.0', 'mock': '3.14.1', 'asyncio': '1.0.0'}}
rootdir: /Users/tamnguyen/Documents/GitHub/violentutf-api
configfile: pytest.ini
plugins: xdist-3.7.0, anyio-4.9.0, env-1.1.5, json-report-1.5.0, httpx-0.35.0, timeout-2.4.0, metadata-3.1.1, cov-6.2.1, Faker-37.3.0, mock-3.14.1, asyncio-1.0.0
asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
collecting ... collected 21 items

tests/unit/core/test_rate_limiting.py::TestRateLimitKey::test_get_rate_limit_key_with_organization PASSED [  4%]
tests/unit/core/test_rate_limiting.py::TestRateLimitKey::test_get_rate_limit_key_with_user_only PASSED [  9%]
tests/unit/core/test_rate_limiting.py::TestRateLimitKey::test_get_rate_limit_key_with_api_key PASSED [ 14%]
tests/unit/core/test_rate_limiting.py::TestRateLimitKey::test_get_rate_limit_key_fallback_to_ip PASSED [ 19%]
tests/unit/core/test_rate_limiting.py::TestRateLimitConfiguration::test_get_rate_limit_known_endpoint PASSED [ 23%]
tests/unit/core/test_rate_limiting.py::TestRateLimitConfiguration::test_get_rate_limit_unknown_endpoint PASSED [ 28%]
tests/unit/core/test_rate_limiting.py::TestRateLimitConfiguration::test_rate_limits_configuration PASSED [ 33%]
tests/unit/core/test_rate_limiting.py::TestRateLimitDecorator::test_rate_limit_disabled PASSED [ 38%]
tests/unit/core/test_rate_limiting.py::TestRateLimitDecorator::test_rate_limit_enabled_no_request_param PASSED [ 42%]
tests/unit/core/test_rate_limiting.py::TestRateLimitDecorator::test_rate_limit_enabled_with_request_param PASSED [ 47%]
tests/unit/core/test_rate_limiting.py::TestRateLimitDecorator::test_ip_rate_limit_disabled PASSED [ 52%]
tests/unit/core/test_rate_limiting.py::TestRateLimitDecorator::test_ip_rate_limit_enabled PASSED [ 57%]
tests/unit/core/test_rate_limiting.py::TestRateLimitStatus::test_get_rate_limit_status_disabled PASSED [ 61%]
tests/unit/core/test_rate_limiting.py::TestRateLimitStatus::test_get_rate_limit_status_enabled PASSED [ 66%]
tests/unit/core/test_rate_limiting.py::TestCustomRateLimitException::test_rate_limit_exceeded_basic PASSED [ 71%]
tests/unit/core/test_rate_limiting.py::TestCustomRateLimitException::test_rate_limit_exceeded_with_retry_after PASSED [ 76%]
tests/unit/core/test_rate_limiting.py::TestRateLimitIntegration::test_rate_limit_decorator_exception_handling PASSED [ 80%]
tests/unit/core/test_rate_limiting.py::TestRateLimitIntegration::test_rate_limit_configuration_completeness PASSED [ 85%]
tests/unit/core/test_rate_limiting.py::TestRateLimitIntegration::test_rate_limit_key_without_state PASSED [ 90%]
tests/unit/core/test_rate_limiting.py::TestRateLimitAsyncBehavior::test_rate_limit_decorator_async_function PASSED [ 95%]
tests/unit/core/test_rate_limiting.py::TestRateLimitAsyncBehavior::test_ip_rate_limit_decorator_async_function PASSED [100%]

=============================== warnings summary ===============================
../../../../../Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/starlette/formparsers.py:12
  /Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/starlette/formparsers.py:12: PendingDeprecationWarning: Please use `import python_multipart` instead.
    import multipart

../../../../../Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/passlib/utils/__init__.py:854
  /Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/passlib/utils/__init__.py:854: DeprecationWarning: 'crypt' is deprecated and slated for removal in Python 3.13
    from crypt import crypt as _crypt

../../../../../Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/pydantic/_internal/_config.py:291
  /Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/pydantic/_internal/_config.py:291: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.9/migration/
    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 21 passed, 3 warnings in 0.15s ========================
