version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    image: violentutf-api:latest
    container_name: violentutf-api
    ports:
      - "${API_PORT:-8000}:8000"
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgresql+asyncpg://violentutf:violentutf@db:5432/violentutf}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-}@redis:6379/0
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-min-32-chars-change-in-production}
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - DEBUG=${DEBUG:-false}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8000
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - ./app:/app/app:ro
      - ./logs:/app/logs
    networks:
      - violentutf-network
    restart: unless-stopped

  db:
    image: postgres:15-alpine
    container_name: violentutf-db
    environment:
      - POSTGRES_USER=${DB_USER:-violentutf}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-violentutf}
      - POSTGRES_DB=${DB_NAME:-violentutf}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups/postgres:/backups
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-violentutf}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - violentutf-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: violentutf-redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-}
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - violentutf-network
    restart: unless-stopped

  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile
    image: violentutf-api:latest
    container_name: violentutf-celery-worker
    command: celery -A app.celery.celery worker --loglevel=info --concurrency=4
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgresql+asyncpg://violentutf:violentutf@db:5432/violentutf}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-}@redis:6379/0
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-min-32-chars-change-in-production}
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD:-}@redis:6379/1
      - CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD:-}@redis:6379/2
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./app:/app/app:ro
      - ./logs:/app/logs
    networks:
      - violentutf-network
    restart: unless-stopped

  flower:
    build:
      context: .
      dockerfile: Dockerfile
    image: violentutf-api:latest
    container_name: violentutf-flower
    command: celery -A app.celery.celery flower --port=5555 --basic_auth=${FLOWER_USER:-admin}:${FLOWER_PASSWORD:-admin}
    ports:
      - "${FLOWER_PORT:-5555}:5555"
    environment:
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD:-}@redis:6379/1
      - CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD:-}@redis:6379/2
      - FLOWER_BASIC_AUTH=${FLOWER_USER:-admin}:${FLOWER_PASSWORD:-admin}
    depends_on:
      - redis
      - celery-worker
    volumes:
      - ./app:/app/app:ro
    networks:
      - violentutf-network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: violentutf-nginx
    ports:
      - "${NGINX_PORT:-80}:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api
    networks:
      - violentutf-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  violentutf-network:
    driver: bridge
