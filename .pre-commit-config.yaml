# Pre-commit hooks for code quality and security
# Install: pip install pre-commit && pre-commit install
default_language_version:
  python: python3.12

repos:
  # Code formatting - PSF maintained
  - repo: https://github.com/psf/black
    rev: 25.1.0
    hooks:
      - id: black
        language_version: python3.12
        args: ['--line-length=120']

  # Import sorting - PyCQA maintained
  - repo: https://github.com/PyCQA/isort
    rev: 6.0.1
    hooks:
      - id: isort
        args: ['--profile=black', '--line-length=120']

  # Linting - PyCQA maintained
  - repo: https://github.com/PyCQA/flake8
    rev: 7.3.0
    hooks:
      - id: flake8
        args: ['--max-line-length=120', '--ignore=E203,W503,E501,F401,F541,E226']
        additional_dependencies:
          - flake8-docstrings==1.7.0
          - flake8-annotations==3.1.1
          - flake8-bugbear==24.2.6
          - flake8-comprehensions==3.14.0

  # Type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.17.0
    hooks:
      - id: mypy
        args: ['--ignore-missing-imports', '--no-strict-optional']

  # Security scanning - PyCQA maintained
  - repo: https://github.com/PyCQA/bandit
    rev: 1.8.6
    hooks:
      - id: bandit
        args: ['-r', '.', '-x', '/tests/', '--skip', 'B101,B601']

  # Secret detection - Yelp maintained
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: package-lock.json

  # YAML formatting - Using stable v3 instead of alpha
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        types: [yaml]
        exclude: '.*\.ya?ml$'

  # Shell script linting
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.10.0.1
    hooks:
      - id: shellcheck

  # Dockerfile linting via Python wrapper
  - repo: https://github.com/AleksaC/hadolint-py
    rev: v2.12.1b3
    hooks:
      - id: hadolint

  # General file checks - pre-commit official
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-json
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable
      - id: detect-private-key

  # Custom hooks
  - repo: local
    hooks:
      - id: no-hardcoded-secrets
        name: Check for hardcoded secrets
        entry: python3 -c "import re, sys; patterns = [r'(?i)(api[_-]?key|api[_-]?secret|access[_-]?key|secret[_-]?key|client[_-]?secret|password|passwd|pwd)\s*[=:]\s*[\"\'`]([^\"\'`]+)[\"\'`]', r'(?i)bearer\s+[a-zA-Z0-9\-\._~\+\/]+=*', r'sk_live_[a-zA-Z0-9]+', r'xox[baprs]-[a-zA-Z0-9\-]+', r'ghp_[a-zA-Z0-9]{36}']; content = sys.stdin.read(); violations = []; [violations.extend(re.finditer(p, content, re.MULTILINE)) for p in patterns]; sys.exit(1 if violations else 0)"
        language: system
        files: '\.(py|js|ts|jsx|tsx|java|go|rb|php|yml|yaml|json|env|sh|bash)$'
        exclude: '(\.example|\.template|test_|_test\.|spec_|_spec\.).*'

      - id: no-print-statements
        name: Check for print statements
        entry: python3 -c "import re, sys; content = sys.stdin.read(); sys.exit(1 if re.search(r'^\s*print\(', content, re.MULTILINE) else 0)"
        language: system
        types: [python]
        exclude: '(test_|_test\.py|debug|scripts/)'

      - id: check-api-security
        name: Check API security patterns
        entry: python3 -c "import re, sys; patterns = [r'verify\s*=\s*False', r'debug\s*=\s*True', r'@app\.route.*methods\s*=\s*\[.*\*.*\]']; content = sys.stdin.read(); violations = []; [violations.extend(re.finditer(p, content, re.MULTILINE)) for p in patterns]; sys.exit(1 if violations else 0)"
        language: system
        types: [python]
